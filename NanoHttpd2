package com.example.medicalcare2;
import android.content.Context;
import android.content.DialogInterface;
import android.os.Bundle;
import android.view.View;
import android.widget.EditText;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import fi.iki.elonen.NanoHTTPD;


public class ma extends AppCompatActivity {
    private AppServer server;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.mylayout);

        // 初始化服务器
        server = new AppServer(this, new AuthCallback() {
            @Override
            public void onAuthResult(boolean isAuthorized) {
                server.sendAuthResponse(isAuthorized);
            }
        });
        // 启动服务器
        try {
            server.start(NanoHTTPD.SOCKET_READ_TIMEOUT, false);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    // 这是一个辅助方法，用于保护隐私
    public String protectPrivacy(String data) {
        if (data == null || data.length() < 4) {
            return data; // 如果数据太短，则直接返回
        }
        // 只显示前两位和后两位，中间用星号表示
        String start = data.substring(0, 2);
        String end = data.substring(data.length() - 2);
        return start + "****" + end;
    }
    // 这是一个辅助方法，用于显示对话框
    public void showAuthDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle("授权");
        // 设置自定义布局
        final View customLayout = getLayoutInflater().inflate(R.layout.activity_my, null);
        builder.setView(customLayout);
        builder.setPositiveButton("确认", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                server.authCallback.onAuthResult(true);
            }
        });
        builder.setNegativeButton("取消", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                server.authCallback.onAuthResult(false);
            }
        });
        // 显示对话框
        AlertDialog dialog = builder.create();
        dialog.show();
    }
    // 定义回调接口
    interface AuthCallback {
        void onAuthResult(boolean isAuthorized);
    }
    public class AppServer extends NanoHTTPD {
        private Context context;
        private AuthCallback authCallback;
        private Response tempResponse;
        public AppServer(Context context, AuthCallback authCallback) {
            super(8081);
            this.context = context;
            this.authCallback = authCallback;
        }

        @Override
        public Response serve(IHTTPSession session) {
            if (Method.POST.equals(session.getMethod()) && "/auth".equals(session.getUri())) {
                // 创建临时响应
                tempResponse = newFixedLengthResponse(Response.Status.ACCEPTED, "application/json", "{\"status\":\"pending\",\"message\":\"授权处理中\"}");
                // 显示对话框
                ((ma) context).runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        ((ma) context).showAuthDialog();
                    }
                });
                // 返回临时响应
                return tempResponse;
            }
            // 对于其他请求，返回404
            return newFixedLengthResponse(Response.Status.NOT_FOUND, "application/json", "{\"status\":\"error\",\"message\":\"未找到资源\"}");
        }
        // 发送授权响应
        public void sendAuthResponse(boolean isAuthorized) {
            if (isAuthorized) {
                tempResponse = newFixedLengthResponse(Response.Status.OK, "application/json", "{\"status\":\"success\",\"message\":\"授权成功\"}");
            } else {
                tempResponse = newFixedLengthResponse(Response.Status.OK, "application/json", "{\"status\":\"cancel\",\"message\":\"授权取消\"}");
            }
        }
    }
}










